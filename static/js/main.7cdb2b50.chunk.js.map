{"version":3,"sources":["components/create.component.js","components/edit.component.js","components/index.component.js","App.js","serviceWorker.js","index.js","environment.js"],"names":["Create","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeEmail","bind","assertThisInitialized","onChangeName","onChangeDescription","onSubmit","goToList","state","email","name","description","e","setState","target","value","history","push","_this2","preventDefault","obj","axios","post","myConstClass","URL","then","res","react_default","a","createElement","style","marginTop","Card_default","Header","Title","Body","className","type","onChange","required","onClick","Component","Edit","get","match","params","id","console","log","data","catch","err","Index","handleInsertButtonClick","handleDeleteButtonClick","createCustomInsertButton","lib","btnText","btnContextual","btnGlyphicon","createCustomDeleteButton","items","totalSize","page","sizePerPage","sortName","sortOrder","fetchData","handlePageChange","handleSizePerPageChange","onSortChange","arguments","length","undefined","limit","total","cell","row","rowIndex","enumObject","_this3","onClickProductSelected","options","sortIndicator","onPageChange","onSizePerPageList","alwaysShowAllBtns","sizePerPageList","text","prePage","nextPage","paginationShowsTotal","color","version","remote","fetchInfo","dataTotalSize","striped","loading","hover","search","pagination","isKey","dataField","dataSort","App","react_router_dom","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","freeze","ACTION_INVALID"],"mappings":"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","file":"static/js/main.7cdb2b50.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nimport myConstClass from '../environment';\r\n\r\nexport default class Create extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.goToList = this.goToList.bind(this);\r\n        this.state = {\r\n            email: '',\r\n            name: '',\r\n            description: ''\r\n        }\r\n    }\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n    onChangeDescription(e) {\r\n        this.setState({\r\n            description: e.target.value\r\n        });\r\n    }\r\n    goToList(e){\r\n        this.props.history.push('/index');\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const obj = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            description: this.state.description\r\n        }\r\n        axios.post(myConstClass.URL+'add', obj)\r\n            .then(res => {\r\n                this.props.history.push('/index');\r\n            });\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            description: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: 10 }}>\r\n                <Card>\r\n                    <Card.Header><Card.Title>Add new blog</Card.Title></Card.Header>\r\n                    <Card.Body>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-2\"></div>\r\n                            <div className=\"col-8\">\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group row\">\r\n                                        <label>Blog email:</label>\r\n                                        <input type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            value={this.state.email}\r\n                                            onChange={this.onChangeEmail} \r\n                                            required/>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label>Blog Name: </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            value={this.state.name}\r\n                                            onChange={this.onChangeName} \r\n                                            required/>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label>Blog Description: </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.onChangeDescription}\r\n                                            required>\r\n                                        </textarea>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <input type=\"submit\" value=\"Create Blog\" className=\"btn btn-primary\" />\r\n                                        <input type=\"button\" value=\"Cancel\" className=\"btn btn-danger\" onClick={this.goToList} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"col-2\"></div>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// import { myConstClass } from '../constant';\r\nexport default class Edit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            description: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/blog/edit/' + this.props.match.params.id)\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    name: res.data.name,\r\n                    email: res.data.email,\r\n                    description: res.data.description\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    onChangeDescription(e) {\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        // e.preventDefault();\r\n        console.log(\"submit\");\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: 10 }}>\r\n                <h4>Add new blog</h4>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Blog email:</label>\r\n                        <input type=\"email\" className=\"form-control-sm\" value={this.state.email} onChange={this.onChangeEmail} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Blog Name: </label>\r\n                        <input type=\"text\" className=\"form-control-sm\" value={this.state.name} onChange={this.onChangeName} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Blog Description: </label>\r\n                        <textarea className=\"form-control-sm\" value={this.state.description} onChange={this.onChangeDescription}></textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Edit Blog\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { BootstrapTable, TableHeaderColumn,InsertButton, DeleteButton   } from 'react-bootstrap-table';\r\nimport myConstClass from '../environment';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport default class Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            totalSize: 100,\r\n            page: 1,\r\n            sizePerPage: 5,\r\n            sortName: 'name',\r\n            sortOrder: 'desc'\r\n        };\r\n        this.fetchData = this.fetchData.bind(this);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.handleSizePerPageChange = this.handleSizePerPageChange.bind(this);\r\n        this.onSortChange = this.onSortChange.bind(this);\r\n    }\r\n    onSortChange(sortName, sortOrder) {\r\n        this.setState({\r\n            sortName:sortName,\r\n            sortOrder:sortOrder\r\n        });\r\n        this.fetchData(1,this.state.sizePerPage,this.state.sortName,this.state.sortOrder);\r\n      }\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n    fetchData(page = this.state.page, sizePerPage = this.state.sizePerPage,sortName = this.state.sortName,sortOrder= this.state.sortOrder) {\r\n        axios.get(myConstClass.URL + 'all', {\r\n            params: {\r\n                page: page,\r\n                limit: sizePerPage,\r\n                sortName:sortName,\r\n                sortOrder:sortOrder\r\n            }\r\n        }).then(data => {\r\n            this.setState({\r\n                items: data.data.items,\r\n                totalSize: data.data.total,\r\n                page,\r\n                sizePerPage,\r\n            });\r\n        });\r\n    }\r\n    handlePageChange(page, sizePerPage) {\r\n        this.fetchData(page, sizePerPage);\r\n    }\r\n\r\n    handleSizePerPageChange(sizePerPage) {\r\n        this.fetchData(1, sizePerPage);\r\n    }\r\n    onDelete() {\r\n\r\n    }\r\n    onClickProductSelected(cell, row, rowIndex) {\r\n\r\n    }\r\n\r\n    cellButton(cell, row, enumObject, rowIndex) {\r\n        return (\r\n            <button\r\n                type=\"button\"\r\n                onClick={\r\n                    () => this.onClickProductSelected(cell, row, rowIndex)\r\n                }>\r\n                edit\r\n            </button>\r\n        )\r\n    }\r\n    handleInsertButtonClick = (onClick) => {\r\n        // Custom your onClick event here,\r\n        // it's not necessary to implement this function if you have no any process before onClick\r\n        console.log('This is my custom function for InserButton click event');\r\n        // onClick();\r\n        this.props.history.push('/create');\r\n      }\r\n      handleDeleteButtonClick= (onClick)=>{\r\n          \r\n      }\r\n    createCustomInsertButton = (onClick) => {\r\n        return (\r\n          <InsertButton\r\n            btnText='CustomInsertText'\r\n            btnContextual='btn-warning'\r\n            className='my-custom-class'\r\n            btnGlyphicon='glyphicon-edit'\r\n            onClick={ () => this.handleInsertButtonClick(onClick) }/>\r\n        );\r\n      }\r\n      createCustomDeleteButton = (onClick) => {\r\n        return (\r\n          <DeleteButton\r\n            btnText='CustomDeleteText'\r\n            btnContextual='btn-warning'\r\n            className='my-custom-class'\r\n            btnGlyphicon='glyphicon-edit'\r\n            onClick={ () => this.handleDeleteButtonClick(onClick) }/>\r\n        );\r\n      }\r\n    render() {\r\n        const options = {\r\n            // insertBtn:this.createCustomInsertButton,\r\n            sortIndicator: true,\r\n            // deleteBtn: this.createCustomDeleteButton,\r\n            onPageChange: this.handlePageChange,\r\n            onSizePerPageList: this.handleSizePerPageChange,\r\n            page: this.state.page,\r\n            sizePerPage: this.state.sizePerPage,\r\n            alwaysShowAllBtns: true,\r\n            sizePerPageList: [{\r\n                text: '5', value: 5\r\n            }, {\r\n                text: '10', value: 10\r\n            }, {\r\n                text: '15', value: 15\r\n            }, {\r\n                text: '20', value: 20\r\n            }],\r\n            prePage: 'Prev', // Previous page button text\r\n            nextPage: 'Next',\r\n            paginationShowsTotal: true,\r\n            sortName: this.state.sortName,\r\n            sortOrder: this.state.sortOrder,\r\n            onSortChange: this.onSortChange\r\n        };\r\n        return (\r\n            <Card>\r\n                <Card.Header><Card.Title>All blog</Card.Title></Card.Header>\r\n                <Card.Body>\r\n                <p style={ { color: 'red' } }>sort: sortName={ this.state.sortName }, sortOrder={ this.state.sortOrder }</p>\r\n                    <BootstrapTable\r\n                        version='4'\r\n                        remote={true}\r\n                        data={this.state.items}\r\n                        options={options}\r\n                        fetchInfo={{ dataTotalSize: this.state.totalSize }}\r\n                        striped\r\n                        loading={true}\r\n                        hover\r\n                        search\r\n                        pagination\r\n                        >\r\n                        <TableHeaderColumn isKey dataField='name' dataSort>Name</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='email' dataSort>Email</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='description' dataSort>Description</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Create from './components/create.component';\nimport Edit from './components/edit.component';\nimport Index from './components/index.component';\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <div className=\"App\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\">\n                <ul className=\"navbar-nav mr-auto\">\n                  <li className=\"nav-item\">\n                    <Link to={'/'} className=\"nav-link\">Home</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={'/create'} className=\"nav-link\">Create</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={'/index'} className=\"nav-link\">Index</Link>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n            <br />\n            <h6>Welcome To Your Blog</h6> <br />\n            <Switch>\n              <Route exact path='/create' component={Create} />\n              <Route path='/edit/:id' component={Edit} />\n              <Route path='/index' component={Index} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter> <App /></BrowserRouter> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = Object.freeze({\r\n    ACTION_INVALID: 'This action is invalid',\r\n    URL: \"http://localhost:4000/blog/\",\r\n});"],"sourceRoot":""}